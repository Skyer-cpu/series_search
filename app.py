# ... (–æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–æ —Ñ—É–Ω–∫—Ü–∏–∏ main())

def main():
    st.title("üé¨ TV Show Recommendation Bot (Secure)")
    st.warning("‚ö†Ô∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º! –í–≤–æ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º (–Ω–∞–ø—Ä–∏–º–µ—Ä: 'comedy about space')")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞—Ç—ã —Ä–æ—Ç–∞—Ü–∏–∏ –∫–ª—é—á–µ–π
    if "last_key_rotation" not in st.session_state:
        st.session_state.last_key_rotation = datetime(2025, 9, 8)
    
    if (datetime.now() - st.session_state.last_key_rotation).days > 90:
        st.warning(f"üö® –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å–º–µ–Ω–∏—Ç—å API –∫–ª—é—á–∏! –ü–æ—Å–ª–µ–¥–Ω—è—è —Ä–æ—Ç–∞—Ü–∏—è: {st.session_state.last_key_rotation.strftime('%d.%m.%Y')}")

    tab1, tab2 = st.tabs(["üîç –ü–æ–∏—Å–∫ —Å–µ—Ä–∏–∞–ª–æ–≤", "üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ RAG"])

    with tab1:
        user_query = st.text_input("**Your query (in English):**", "recommend a series about space and aliens", key="query_input")

        if st.button("Search", key="search_btn"):
            if not check_api_keys():
                st.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ API –∫–ª—é—á–∏ –≤ secrets.toml")
                return
                
            with st.spinner("–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞..."):
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —è–∑—ã–∫–µ –∑–∞–ø—Ä–æ—Å–∞
                st.session_state.was_russian = is_russian(user_query)
                original_query = user_query
                
                # –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ä—É—Å—Å–∫–æ–º - –ø–µ—Ä–µ–≤–æ–¥–∏–º –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π
                if st.session_state.was_russian:
                    st.warning("–Ø –Ω–µ –¥–ª—è —Ç–æ–≥–æ —Ä–∞–∑–±–∏—Ä–∞–ª—Å—è –≤ Yandex API, —á—Ç–æ–±—ã –≤—ã –æ–±–º–∞–Ω—ã–≤–∞–ª–∏ —Å–∏—Å—Ç–µ–º—É! –í–∞—à —Ç–µ–∫—Å—Ç –±—É–¥–µ—Ç –ø–µ—Ä–µ–≤–µ–¥–µ–Ω –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π üò†")
                    user_query = translate_text(user_query, target_lang="en", source_lang="ru")
                    st.write(f"–ü–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å: {user_query}")
                
                # –®–∞–≥ 1: –ü–æ–∏—Å–∫ –≤ Qdrant
                st.subheader("üîç –ù–∞–π–¥–µ–Ω–Ω—ã–µ —Å–µ—Ä–∏–∞–ª—ã (—Å—ã—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ)")
                shows = search_in_qdrant(user_query)
                if shows:
                    st.json(shows, expanded=True)

                    # –®–∞–≥ 2: –ó–∞–ø—Ä–æ—Å –∫ YandexGPT
                    st.subheader("ü§ñ –û—Ç–≤–µ—Ç YandexGPT")
                    gpt_response_en = ask_yandex_gpt(user_query, shows)
                    st.text_area("–û—Ç–≤–µ—Ç –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º", gpt_response_en, height=200)
                    
                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∞
                    st.session_state.gpt_response_en = gpt_response_en

                    # –®–∞–≥ 3: –ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ —Ä—É—Å—Å–∫–∏–π (–µ—Å–ª–∏ –∏—Å—Ö–æ–¥–Ω—ã–π –∑–∞–ø—Ä–æ—Å –±—ã–ª –Ω–∞ —Ä—É—Å—Å–∫–æ–º)
                    if st.session_state.was_russian:
                        st.subheader("üá∑üá∫ –ü–µ—Ä–µ–≤–æ–¥ –æ—Ç–≤–µ—Ç–∞")
                        gpt_response_ru = translate_text(gpt_response_en, target_lang="ru", source_lang="en")
                        st.text_area("–û—Ç–≤–µ—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–º", gpt_response_ru, height=200)
                        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–µ—Ä–µ–≤–æ–¥
                        st.session_state.gpt_response_ru = gpt_response_ru
                else:
                    st.warning("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Å–µ—Ä–∏–∞–ª—ã –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –ø–µ—Ä–µ–≤–æ–¥–∞, –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –±—ã–ª –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º –∏ –µ—Å—Ç—å –æ—Ç–≤–µ—Ç
        if ('was_russian' in st.session_state and not st.session_state.was_russian and 
            'gpt_response_en' in st.session_state):
            if st.button("–ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Ä—É—Å—Å–∫–∏–π", key="translate_btn"):
                with st.spinner("–ü–µ—Ä–µ–≤–æ–¥ –æ—Ç–≤–µ—Ç–∞..."):
                    gpt_response_ru = translate_text(st.session_state.gpt_response_en, target_lang="ru", source_lang="en")
                    st.session_state.gpt_response_ru = gpt_response_ru
                    st.subheader("üá∑üá∫ –ü–µ—Ä–µ–≤–æ–¥ –æ—Ç–≤–µ—Ç–∞")
                    st.text_area("–û—Ç–≤–µ—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–º", gpt_response_ru, height=200)

    with tab2:
        # ... (–æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ –≤–∫–ª–∞–¥–∫–∏ RAG –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)

if __name__ == "__main__":
    main()
